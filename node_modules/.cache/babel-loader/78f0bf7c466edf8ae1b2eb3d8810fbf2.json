{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DilanUdz\\\\Desktop\\\\NucampFolder\\\\3-React\\\\nucampsite\\\\src\\\\features\\\\user\\\\UserLoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser, selectCurrentUser } from './userSlice';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport defaultAvatar from '../../app/assets/img/unicorn.png';\nimport { validateUserLoginForm } from \"../../utils/validateUserLoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserLoginForm = () => {\n  _s();\n\n  const [loginModalOpen, setLoginModalOpen] = useState(false);\n  const currentUser = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n\n  const handleLogin = values => {\n    const currentUser = {\n      id: Date.now(),\n      avatar: defaultAvatar,\n      username: values.username,\n      password: values.password\n    };\n    dispatch(setCurrentUser(currentUser));\n    setLoginModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"navbar-text ml-auto\",\n      children: currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '4rem',\n          height: '4rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.avatar,\n          alt: 'user',\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        onClick: () => setLoginModalOpen(true),\n        style: {\n          color: 'white',\n          border: '1px solid white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-sign-in fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), \" Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: loginModalOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => setLoginModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: \"\",\n            password: \"\"\n          },\n          onSubmit: handleLogin,\n          validate: validateUserLoginForm,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"username\",\n                name: \"username\",\n                placeholder: \"Username\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                id: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserLoginForm, \"BGKCAaHAgLgsOuifmT36lWCJBX4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserLoginForm;\nexport default UserLoginForm; // import { useState } from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { setCurrentUser, selectCurrentUser } from \"./userSlice\";\n// import {\n//   Modal,\n//   ModalHeader,\n//   ModalBody,\n//   FormGroup,\n//   Label,\n//   Button,\n// } from \"reactstrap\";\n// import { Formik, Field, Form, ErrorMessage } from \"formik\";\n// import defaultAvatar from \"../../app/assets/img/unicorn.png\";\n// // import { validateUserLoginForm } from \"../../utils/validateUserLoginForm\";\n// const UserLoginForm = () => {\n//   const [loginModalOpen, setLoginModalOpen] = useState(false);\n//   const currentUser = useSelector(selectCurrentUser);\n//   const dispatch = useDispatch();\n//   const handleLogin = (values) => {\n//     const currentUser = {\n//       id: Date.now(),\n//       avatar: defaultAvatar,\n//       username: values.username,\n//       password: values.password,\n//     };\n//     dispatch(setCurrentUser(currentUser));\n//     setLoginModalOpen(false);\n//   };\n//   return (\n//     <>\n//       <span className=\"navbar-text ml-auto\">\n//         {currentUser ? (\n//           <div style={{ width: \"4rem\", height: \"4rem\" }}>\n//             <img\n//               src={currentUser.avatar}\n//               alt={\"user\"}\n//               style={{ width: \"100%\", height: \"100%\" }}\n//             />\n//           </div>\n//         ) : (\n//           <Button\n//             outline\n//             onClick={() => setLoginModalOpen(true)}\n//             style={{ color: \"white\", border: \"1px solid white\" }}\n//           >\n//             <i className=\"fa fa-sign-in fa-lg\" /> Login\n//           </Button>\n//         )}\n//       </span>\n//       <Modal isOpen={loginModalOpen}>\n//         <ModalHeader toggle={() => setLoginModalOpen(false)}></ModalHeader>\n//         <ModalBody>\n//           <Formik\n//             initialValues={{ username: \"\", password: \"\" }}\n//             onSubmit={handleLogin}\n//             // validate={validateUserLoginForm}\n//           >\n//             <Form>\n//               <FormGroup>\n//                 <Label htmlFor=\"username\">Username</Label>\n//                 <Field\n//                   id=\"username\"\n//                   name=\"username\"\n//                   placeholder=\"Username\"\n//                   className=\"form-control\"\n//                 />\n//                 <ErrorMessage name=\"username\" />\n//               </FormGroup>\n//               <FormGroup>\n//                 <Label htmlFor=\"password\">Password</Label>\n//                 <Field\n//                   id=\"password\"\n//                   name=\"password\"\n//                   placeholder=\"Password\"\n//                   className=\"form-control\"\n//                 />\n//                 <ErrorMessage name=\"password\" />\n//               </FormGroup>\n//               <Button type=\"submit\" color=\"primary\">\n//                 Login\n//               </Button>\n//             </Form>\n//           </Formik>\n//         </ModalBody>\n//       </Modal>\n//     </>\n//   );\n// };\n// export default UserLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLoginForm\");","map":{"version":3,"names":["useState","useSelector","useDispatch","setCurrentUser","selectCurrentUser","Modal","ModalHeader","ModalBody","FormGroup","Label","Button","Formik","Field","Form","ErrorMessage","defaultAvatar","validateUserLoginForm","UserLoginForm","loginModalOpen","setLoginModalOpen","currentUser","dispatch","handleLogin","values","id","Date","now","avatar","username","password","width","height","color","border"],"sources":["C:/Users/DilanUdz/Desktop/NucampFolder/3-React/nucampsite/src/features/user/UserLoginForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCurrentUser, selectCurrentUser } from './userSlice';\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    Label,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Formik, Field, Form,ErrorMessage } from 'formik';\r\nimport defaultAvatar from '../../app/assets/img/unicorn.png';\r\nimport { validateUserLoginForm } from \"../../utils/validateUserLoginForm\";\r\n\r\nconst UserLoginForm=()=>{\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false);\r\n\r\n    const currentUser = useSelector(selectCurrentUser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogin = (values) => {\r\n        const currentUser = {\r\n          id: Date.now(),\r\n          avatar: defaultAvatar,\r\n          username: values.username,\r\n          password: values.password,\r\n        };\r\n\r\n        dispatch(setCurrentUser(currentUser));\r\n        setLoginModalOpen(false);\r\n      };\r\n\r\n      return (\r\n          <>\r\n            <span className=\"navbar-text ml-auto\">\r\n                {currentUser ? (\r\n                        <div style={{ width: '4rem', height: '4rem' }}>\r\n                            <img\r\n                                src={currentUser.avatar}\r\n                                alt={'user'}\r\n                                style={{ width: '100%', height: '100%' }}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <Button\r\n                            outline\r\n                            onClick={() => setLoginModalOpen(true)}\r\n                            style={{ color: 'white', border: '1px solid white' }}\r\n                        >\r\n                            <i className='fa fa-sign-in fa-lg' /> Login\r\n                        </Button>\r\n                    )}\r\n            </span>\r\n                <Modal isOpen={loginModalOpen}>\r\n                    <ModalHeader toggle={() => setLoginModalOpen(false)}></ModalHeader>\r\n                        <ModalBody>\r\n                            <Formik\r\n                            initialValues={{ username: \"\", password: \"\" }}\r\n                            onSubmit={handleLogin}\r\n                            validate={validateUserLoginForm}\r\n                            > \r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Field\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"Username\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage name=\"username\" />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                    <Field\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                    <ErrorMessage name=\"password\" />                                    \r\n                                </FormGroup>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Login\r\n                                    </Button>\r\n                            </Form>\r\n                            </Formik>  \r\n                        </ModalBody>\r\n                </Modal>                \r\n          \r\n          \r\n          </>\r\n      );\r\n};\r\n\r\nexport default UserLoginForm;\r\n\r\n// import { useState } from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { setCurrentUser, selectCurrentUser } from \"./userSlice\";\r\n// import {\r\n//   Modal,\r\n//   ModalHeader,\r\n//   ModalBody,\r\n//   FormGroup,\r\n//   Label,\r\n//   Button,\r\n// } from \"reactstrap\";\r\n// import { Formik, Field, Form, ErrorMessage } from \"formik\";\r\n// import defaultAvatar from \"../../app/assets/img/unicorn.png\";\r\n// // import { validateUserLoginForm } from \"../../utils/validateUserLoginForm\";\r\n\r\n// const UserLoginForm = () => {\r\n//   const [loginModalOpen, setLoginModalOpen] = useState(false);\r\n\r\n//   const currentUser = useSelector(selectCurrentUser);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const handleLogin = (values) => {\r\n//     const currentUser = {\r\n//       id: Date.now(),\r\n//       avatar: defaultAvatar,\r\n//       username: values.username,\r\n//       password: values.password,\r\n//     };\r\n\r\n//     dispatch(setCurrentUser(currentUser));\r\n//     setLoginModalOpen(false);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <span className=\"navbar-text ml-auto\">\r\n//         {currentUser ? (\r\n//           <div style={{ width: \"4rem\", height: \"4rem\" }}>\r\n//             <img\r\n//               src={currentUser.avatar}\r\n//               alt={\"user\"}\r\n//               style={{ width: \"100%\", height: \"100%\" }}\r\n//             />\r\n//           </div>\r\n//         ) : (\r\n//           <Button\r\n//             outline\r\n//             onClick={() => setLoginModalOpen(true)}\r\n//             style={{ color: \"white\", border: \"1px solid white\" }}\r\n//           >\r\n//             <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n//           </Button>\r\n//         )}\r\n//       </span>\r\n//       <Modal isOpen={loginModalOpen}>\r\n//         <ModalHeader toggle={() => setLoginModalOpen(false)}></ModalHeader>\r\n//         <ModalBody>\r\n//           <Formik\r\n//             initialValues={{ username: \"\", password: \"\" }}\r\n//             onSubmit={handleLogin}\r\n//             // validate={validateUserLoginForm}\r\n//           >\r\n//             <Form>\r\n//               <FormGroup>\r\n//                 <Label htmlFor=\"username\">Username</Label>\r\n//                 <Field\r\n//                   id=\"username\"\r\n//                   name=\"username\"\r\n//                   placeholder=\"Username\"\r\n//                   className=\"form-control\"\r\n//                 />\r\n//                 <ErrorMessage name=\"username\" />\r\n//               </FormGroup>\r\n//               <FormGroup>\r\n//                 <Label htmlFor=\"password\">Password</Label>\r\n//                 <Field\r\n//                   id=\"password\"\r\n//                   name=\"password\"\r\n//                   placeholder=\"Password\"\r\n//                   className=\"form-control\"\r\n//                 />\r\n//                 <ErrorMessage name=\"password\" />\r\n//               </FormGroup>\r\n//               <Button type=\"submit\" color=\"primary\">\r\n//                 Login\r\n//               </Button>\r\n//             </Form>\r\n//           </Formik>\r\n//         </ModalBody>\r\n//       </Modal>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserLoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}