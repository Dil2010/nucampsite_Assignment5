{"ast":null,"code":"// import { CAMPSITES } from \"../../app/shared/CAMPSITES\";\n// import { createSlice } from \"@reduxjs/toolkit\";\n// const initialState = {\n//     campsitesArray: CAMPSITES,\n// };\n// const campsitesSlice = createSlice({\n//     name: 'campsites',\n//     initialState\n// });\n// export const campsitesReducer = campsitesSlice.reducer;\n// export const selectAllCampsites = (state) => {\n//     return state.campsites.campsitesArray;\n// };\n// export const selectCampsiteById = (id) => (state) => {\n//     return state.campsites.campsitesArray.find(\n//         (campsite) => campsite.id === parseInt(id)\n//     );\n// };\n// export const selectFeaturedCampsite = (state) => {\n//     return state.campsites.campsitesArray.find((campsite) => campsite.featured);\n// };\nimport { CAMPSITES } from \"../../app/shared/CAMPSITES\";\nimport { createSlice } from \"@reduxjs/toolkit\"; // export const fetchCampsites = createAsyncThunk(\n//   'campsites/fetchCampsites',\n//   async () => {\n//       const response = await fetch(baseUrl + 'campsites');\n//       if (!response.ok) {\n//           return Promise.reject('Unable to fetch, status: ' + response.status);\n//       }\n//       const data = await response.json();\n//       return data;\n//   }\n// );\n\nconst initialState = {\n  campsitesArray: CAMPSITES\n};\nconst campsitesSlice = createSlice({\n  name: \"campsites\",\n  initialState\n});\nexport const campsitesReducer = campsitesSlice.reducer;\nexport const selectAllCampsites = state => {\n  return state.campsites.campsitesArray;\n}; // export const selectRandomCampsite = () => {\n//     return CAMPSITES[Math.floor(Math.random()*CAMPSITES.length)];\n// }\n\nexport const selectCampsiteById = id => state => {\n  return state.campsites.campsitesArray.find(campsite => campsite.id === parseInt(id));\n};\nexport const selectFeaturedCampsite = state => {\n  return state.campsites.campsitesArray.find(campsite => campsite.featured);\n};","map":{"version":3,"names":["CAMPSITES","createSlice","initialState","campsitesArray","campsitesSlice","name","campsitesReducer","reducer","selectAllCampsites","state","campsites","selectCampsiteById","id","find","campsite","parseInt","selectFeaturedCampsite","featured"],"sources":["C:/Users/DilanUdz/Desktop/NucampFolder/3-React/nucampsite/src/features/campsites/campsitesSlice.js"],"sourcesContent":["// import { CAMPSITES } from \"../../app/shared/CAMPSITES\";\r\n// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\n// const initialState = {\r\n//     campsitesArray: CAMPSITES,\r\n// };\r\n\r\n// const campsitesSlice = createSlice({\r\n//     name: 'campsites',\r\n//     initialState\r\n// });\r\n\r\n// export const campsitesReducer = campsitesSlice.reducer;\r\n\r\n\r\n// export const selectAllCampsites = (state) => {\r\n//     return state.campsites.campsitesArray;\r\n// };\r\n\r\n// export const selectCampsiteById = (id) => (state) => {\r\n//     return state.campsites.campsitesArray.find(\r\n//         (campsite) => campsite.id === parseInt(id)\r\n//     );\r\n// };\r\n\r\n// export const selectFeaturedCampsite = (state) => {\r\n//     return state.campsites.campsitesArray.find((campsite) => campsite.featured);\r\n// };\r\n\r\nimport { CAMPSITES } from \"../../app/shared/CAMPSITES\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const fetchCampsites = createAsyncThunk(\r\n//   'campsites/fetchCampsites',\r\n//   async () => {\r\n//       const response = await fetch(baseUrl + 'campsites');\r\n//       if (!response.ok) {\r\n//           return Promise.reject('Unable to fetch, status: ' + response.status);\r\n//       }\r\n//       const data = await response.json();\r\n//       return data;\r\n//   }\r\n// );\r\n\r\nconst initialState = {\r\n  campsitesArray: CAMPSITES,\r\n};\r\n\r\nconst campsitesSlice = createSlice({\r\n  name: \"campsites\",\r\n  initialState,\r\n});\r\n\r\nexport const campsitesReducer = campsitesSlice.reducer;\r\n\r\nexport const selectAllCampsites = (state) => {\r\n  return state.campsites.campsitesArray;\r\n};\r\n\r\n// export const selectRandomCampsite = () => {\r\n//     return CAMPSITES[Math.floor(Math.random()*CAMPSITES.length)];\r\n// }\r\n\r\nexport const selectCampsiteById = (id) => (state) => {\r\n  return state.campsites.campsitesArray.find(\r\n      (campsite) => campsite.id === parseInt(id)\r\n      );\r\n};\r\n\r\nexport const selectFeaturedCampsite = (state) => {\r\n  return state.campsites.campsitesArray.find((campsite) => campsite.featured);\r\n};\r\n"],"mappings":"AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,4BAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAEH;AADG,CAArB;AAIA,MAAMI,cAAc,GAAGH,WAAW,CAAC;EACjCI,IAAI,EAAE,WAD2B;EAEjCH;AAFiC,CAAD,CAAlC;AAKA,OAAO,MAAMI,gBAAgB,GAAGF,cAAc,CAACG,OAAxC;AAEP,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;EAC3C,OAAOA,KAAK,CAACC,SAAN,CAAgBP,cAAvB;AACD,CAFM,C,CAIP;AACA;AACA;;AAEA,OAAO,MAAMQ,kBAAkB,GAAIC,EAAD,IAASH,KAAD,IAAW;EACnD,OAAOA,KAAK,CAACC,SAAN,CAAgBP,cAAhB,CAA+BU,IAA/B,CACFC,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBG,QAAQ,CAACH,EAAD,CADnC,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,sBAAsB,GAAIP,KAAD,IAAW;EAC/C,OAAOA,KAAK,CAACC,SAAN,CAAgBP,cAAhB,CAA+BU,IAA/B,CAAqCC,QAAD,IAAcA,QAAQ,CAACG,QAA3D,CAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}